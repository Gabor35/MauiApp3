@page "/esemenyek"
@using MauiApp3.Models
@inject MauiApp3.Services.ApiService Api

<style>
    /* Háttér és betűtípus beállítása */
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
        color: #333;
        padding: 20px;
    }

    h2 {
        text-align: center;
        font-size: 2rem;
        margin-bottom: 20px;
        color: #444;
    }

    /* Események konténer */
    .events-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
    }

    /* Kártyák stílusa */
    .event-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        width: 340px;
    }

        .event-card:hover {
            box-shadow: 0 10px 18px rgba(0, 0, 0, 0.25);
        }

        .event-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

    /* Kártya tartalom */
    .event-content {
        padding: 20px;
        text-align: center;
    }

        .event-content h3 {
            margin-top: 0;
            font-size: 1.5rem;
            color: #222;
        }

        .event-content p {
            margin: 5px 0;
            color: #555;
            font-size: 1rem;
        }

        .event-content .date,
        .event-content .location {
            font-weight: bold;
            color: #444;
        }

        /* Gomb stílus */
        .event-content .btn {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 15px;
            background: linear-gradient(135deg, #ff7e5f, #feb47b);
            color: white;
            font-size: 1rem;
            font-weight: bold;
            border-radius: 20px;
            text-decoration: none;
            position: relative;
            cursor: pointer;
            border: none;
        }

            .event-content .btn:hover {
                background: linear-gradient(135deg, #ff6b4f, #ffa269);
            }

    /* Modal (Felugró ablak) */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 10px;
        width: 400px;
        text-align: center;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

        .modal-content h3 {
            margin: 0;
            font-size: 1.6rem;
        }

        .modal-content p {
            margin: 10px 0;
            font-size: 1rem;
            color: #555;
        }

    .close-btn {
        margin-top: 15px;
        padding: 8px 15px;
        background: #ff7e5f;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        .close-btn:hover {
            background: #ff5733;
        }

    .show {
        display: flex;
    }
</style>

<h2>📅 Események Listája</h2>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger text-center">@errorMessage</p>
}
else if (esemenyek == null)
{
    <p class="text-center">🔄 Betöltés...</p>
}
else if (!esemenyek.Any())
{
    <p class="text-center">🚫 Nincs megjeleníthető esemény.</p>
}
else
{
    <div class="events-container">
        @foreach (var esemeny in esemenyek)
        {
            <div class="event-card">
                <img src="@esemeny.Kepurl" alt="@esemeny.Cime" />
                <div class="event-content">
                    <h3>@esemeny.Cime</h3>
                    <p class="date">📅 @esemeny.Datum.ToString("yyyy.MM.dd HH:mm")</p>
                    <p class="location">📍 @esemeny.Helyszin</p>
                    <button class="btn" @onclick="() => ShowModal(esemeny)">További információ</button>
                </div>
            </div>
        }
    </div>
}

/* MODAL ABLAK MEGJELENÍTÉSE */
@if (selectedEsemeny != null)
{
    <div class="modal show">
        <div class="modal-content">
            <h3>@selectedEsemeny.Cime</h3>
            <p>@selectedEsemeny.Leiras</p>
            <button class="close-btn" @onclick="CloseModal">Bezárás</button>
        </div>
    </div>
}

@code {
    private List<Esemeny>? esemenyek;
    private string errorMessage = string.Empty;
    private Esemeny? selectedEsemeny;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            esemenyek = await Api.GetEsemenyekAsync();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void ShowModal(Esemeny esemeny)
    {
        selectedEsemeny = esemeny;
    }

    private void CloseModal()
    {
        selectedEsemeny = null;
    }
}
